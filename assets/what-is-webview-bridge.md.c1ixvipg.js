import{_ as e,c as i,o as a,U as t}from"./chunks/framework.9YE1Yztb.js";const m=JSON.parse('{"title":"What is WebViewBridge","description":"","frontmatter":{},"headers":[],"relativePath":"what-is-webview-bridge.md","filePath":"what-is-webview-bridge.md"}'),o={name:"what-is-webview-bridge.md"},n=t('<h1 id="what-is-webviewbridge" tabindex="-1">What is WebViewBridge <a class="header-anchor" href="#what-is-webviewbridge" aria-label="Permalink to &quot;What is WebViewBridge&quot;">​</a></h1><p><code>webview-bridge</code> is a powerful interface that acts as a bridge between React Native and web applications using <code>react-native-webview</code>. It provides seamless interaction and ensures type safety.</p><p>Inspired by the functionality of <code>tRPC</code>, <code>webview-bridge</code> simplifies the communication process between <code>react-native-webview</code> and web applications.</p><h2 id="what-does-webviewbridge-solve" tabindex="-1">What Does WebViewBridge Solve? <a class="header-anchor" href="#what-does-webviewbridge-solve" aria-label="Permalink to &quot;What Does WebViewBridge Solve?&quot;">​</a></h2><p>When developing apps with <code>React Native WebView</code>, there are occasions where <code>web</code> functionalities need to access React Native&#39;s features. Common examples include <code>screen navigation</code>, <code>in-app browser</code> and <code>etc</code>.</p><p>To implement these functionalities, each <code>WebView</code> project typically needs to establish its own communication interface. Conversely, there are times in a React Native app when features from the web need to be invoked.</p><p>Since WebView and the web operate as distinct entities, communication is usually implemented in a unidirectional manner.</p><p>However, <code>webview-bridge</code> transcends this limitation by utilizing event and promise-based mechanisms, enabling bidirectional communication. This approach allows for the retrieval of return values from functions as one would in a standard programming context.</p>',8),s=[n];function c(r,d,w,b,l,p){return a(),i("div",null,s)}const v=e(o,[["render",c]]);export{m as __pageData,v as default};
